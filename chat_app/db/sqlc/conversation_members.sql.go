// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.15.0
// source: conversation_members.sql

package db

import (
	"context"
)

const listUserIdByConversationId = `-- name: ListUserIdByConversationId :many
SELECT user_id FROM conversation_members
WHERE conversation_id = $1
`

func (q *Queries) ListUserIdByConversationId(ctx context.Context, conversationID string) ([]string, error) {
	rows, err := q.db.QueryContext(ctx, listUserIdByConversationId, conversationID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []string{}
	for rows.Next() {
		var user_id string
		if err := rows.Scan(&user_id); err != nil {
			return nil, err
		}
		items = append(items, user_id)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
